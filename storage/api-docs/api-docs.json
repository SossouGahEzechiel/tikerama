{
    "openapi": "3.0.0",
    "info": {
        "title": "API Tikerama",
        "description": "Documentation de l'API pour le projet Tikerama.",
        "contact": {
            "email": "support@tikerama.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8001",
            "description": "Serveur de développement"
        }
    ],
    "paths": {
        "/api/events": {
            "get": {
                "tags": [
                    "Événements"
                ],
                "summary": "Liste des événements à venir",
                "description": "Récupère une liste d'événements filtrée et paginée.",
                "operationId": "275cdabe554e8b12845750e37ffca5c2",
                "parameters": [
                    {
                        "name": "code",
                        "in": "query",
                        "description": "Filtre les événements par code.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Nombre d'événements par page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Liste paginée des événements",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EventResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Requête incorrecte."
                    }
                }
            }
        },
        "/api/events/{slug}": {
            "get": {
                "tags": [
                    "Événements"
                ],
                "summary": "Détails d'un événement",
                "description": "Récupère un événement en utilisant son slug.",
                "operationId": "b42161b82b02e84a22e83f90381b1f04",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Le slug de l'événement.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Détails de l'événement.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EventResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Aucun événement trouvé."
                    }
                }
            }
        },
        "/api/intents": {
            "post": {
                "tags": [
                    "Intentions"
                ],
                "summary": "Créer une nouvelle intention de commande",
                "description": "/**",
                "operationId": "6d71f3bb4ce2640c56977a6893f79427",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "example@test.com",
                                        "nullable": true
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "22890000000",
                                        "nullable": true
                                    },
                                    "content": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "slug": {
                                                    "type": "string",
                                                    "example": "vip-ticket"
                                                },
                                                "count": {
                                                    "type": "integer",
                                                    "example": 2
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "eventSlug": {
                                        "type": "string",
                                        "example": "concert-du-20-aout"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Intention de commande créée avec succès",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IntentResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Les données fournies sont incorrectes"
                    }
                }
            }
        },
        "/api/intents/{slug}": {
            "get": {
                "tags": [
                    "Intentions"
                ],
                "summary": "Récupérer une intention de commande par son slug",
                "description": "Récupère une intention de commande à partir de son slug.",
                "operationId": "d100d8ef7b3b7cf5ebe8484c26c63719",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Le slug de l'intention de commande",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Détails de l'intention de commande",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IntentResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "L'intention de commande n'a pas été trouvée"
                    }
                }
            }
        },
        "/api/orders/{slug}": {
            "post": {
                "tags": [
                    "Orders"
                ],
                "summary": "Créer une nouvelle commande à partir d'une intention",
                "description": "Cette route permet de créer une nouvelle commande en utilisant les informations d'une intention de commande existante. Elle génère également les tickets associés.",
                "operationId": "createOrder",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Le slug de l'intention de commande.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "intent-slug-123"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Données de la commande incluant le moyen de paiement",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "paymentMethod"
                                ],
                                "properties": {
                                    "paymentMethod": {
                                        "type": "string",
                                        "example": "Credit Card"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Commande créée avec succès.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "L'intention de commande n'existe pas.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "L'intention de commande à laquelle vous essayez d'accéder semble ne pas exister"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Erreur de validation des données fournies.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Le moyen de payement est requis."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Erreur serveur lors de la création de la commande.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Une erreur est survenue lors du traitement de la commande."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/register": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Enregistre un nouvel utilisateur",
                "operationId": "836741aa87a676ec9a7c4ebee320b418",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "firstName",
                                    "lastName",
                                    "phone",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "firstName": {
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "lastName": {
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "123456789"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "john.doe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Utilisateur enregistré avec succès",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Erreur de validation"
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Utilisateur"
                ],
                "summary": "Authentifie un utilisateur et génère un token d'accès",
                "operationId": "52038e41a5936a6eac502753ed70936c",
                "requestBody": {
                    "description": "Les informations d'authentification",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Authentification réussie, renvoie les informations de l'utilisateur et un token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "firstName": {
                                            "type": "string",
                                            "example": "John"
                                        },
                                        "lastName": {
                                            "type": "string",
                                            "example": "Doe"
                                        },
                                        "email": {
                                            "type": "string",
                                            "example": "user@example.com"
                                        },
                                        "phone": {
                                            "type": "string",
                                            "example": "+1234567890"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Erreur d'authentification, identifiants incorrects",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Ces identifiants ne correspondent pas à nos enregistrements."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Erreur de validation des données",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "L'adresse email est requise."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Erreur serveur",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Une erreur est survenue lors de l'authentification."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "EventResource": {
                "title": "Event Resource",
                "description": "Représentation d'un événement.",
                "required": [
                    "title",
                    "code",
                    "date",
                    "hour",
                    "city",
                    "slug",
                    "image",
                    "category",
                    "lowerPrice",
                    "types"
                ],
                "properties": {
                    "title": {
                        "description": "EventResource",
                        "type": "string",
                        "example": "Concert du 20 août"
                    },
                    "code": {
                        "type": "string",
                        "example": "767VF"
                    },
                    "date": {
                        "type": "string",
                        "format": "date",
                        "example": "ven. 16 août 2024"
                    },
                    "hour": {
                        "type": "string",
                        "format": "time",
                        "example": "15:40"
                    },
                    "city": {
                        "type": "string",
                        "example": "Lomé"
                    },
                    "slug": {
                        "type": "string",
                        "example": "concert-du-20-aout"
                    },
                    "image": {
                        "type": "string",
                        "example": "https://example.com/image.jpg"
                    },
                    "description": {
                        "type": "string",
                        "example": "Un concert exceptionnel au Stade de Lomé."
                    },
                    "category": {
                        "type": "string",
                        "example": "Musique"
                    },
                    "types": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TicketTypeResource"
                        }
                    },
                    "lowerPrice": {
                        "type": "integer|string",
                        "example": 1000
                    }
                },
                "type": "object"
            },
            "IntentResource": {
                "title": "Intent Resource",
                "description": "Représentation d'une intention de commande.",
                "required": [
                    "slug",
                    "price",
                    "userEmail",
                    "userPhone",
                    "expires_at",
                    "content",
                    "event",
                    "paymentMethod"
                ],
                "properties": {
                    "slug": {
                        "type": "string",
                        "example": "intent-slug-123"
                    },
                    "price": {
                        "type": "number",
                        "format": "float",
                        "example": 150
                    },
                    "userEmail": {
                        "type": "string",
                        "format": "email",
                        "example": "user@example.com"
                    },
                    "userPhone": {
                        "type": "string",
                        "example": "22890000000"
                    },
                    "expires_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "20 août 2024 16:30:00"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TicketTypeResource"
                        }
                    },
                    "event": {
                        "$ref": "#/components/schemas/EventResource"
                    },
                    "paymentMethod": {
                        "type": "string",
                        "example": "Credit Card"
                    },
                    "unComputed": {
                        "type": "string",
                        "example": "Certains tickets ne sont plus disponibles",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "OrderResource": {
                "title": "Order Resource",
                "description": "Représente une commande avec ses tickets associés.",
                "required": [
                    "price",
                    "author_email",
                    "author_phone",
                    "event_id",
                    "payment_method",
                    "number",
                    "tickets"
                ],
                "properties": {
                    "price": {
                        "type": "number",
                        "format": "float",
                        "example": 150
                    },
                    "author_email": {
                        "type": "string",
                        "format": "email",
                        "example": "user@example.com"
                    },
                    "author_phone": {
                        "type": "string",
                        "example": "22890000000"
                    },
                    "event_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "payment_method": {
                        "type": "string",
                        "example": "Credit Card"
                    },
                    "number": {
                        "type": "string",
                        "example": "AB12CD"
                    },
                    "tickets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TicketResource"
                        }
                    }
                },
                "type": "object"
            },
            "TicketResource": {
                "title": "Ticket Resource",
                "description": "Représente un ticket associé à un événement et à une commande.",
                "required": [
                    "key",
                    "price",
                    "status",
                    "createdAt",
                    "email",
                    "phone"
                ],
                "properties": {
                    "key": {
                        "type": "string",
                        "example": "ABC123"
                    },
                    "price": {
                        "type": "number",
                        "format": "float",
                        "example": 50
                    },
                    "status": {
                        "type": "string",
                        "example": "VALIDATED"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "16 Août 2024 14:30"
                    },
                    "event": {
                        "$ref": "#/components/schemas/EventResource"
                    },
                    "order": {
                        "$ref": "#/components/schemas/OrderResource"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "user@example.com"
                    },
                    "phone": {
                        "type": "string",
                        "example": "22890000000"
                    }
                },
                "type": "object"
            },
            "UserResource": {
                "title": "Ressource utilisateur",
                "description": "Représentation des informations d'un utilisateur",
                "properties": {
                    "firstName": {
                        "description": "Le prénom de l'utilisateur",
                        "type": "string",
                        "example": "John"
                    },
                    "lastName": {
                        "description": "Le nom de famille de l'utilisateur",
                        "type": "string",
                        "example": "Doe"
                    },
                    "email": {
                        "description": "L'adresse email de l'utilisateur",
                        "type": "string",
                        "format": "email",
                        "example": "user@example.com"
                    },
                    "phone": {
                        "description": "Le numéro de téléphone de l'utilisateur",
                        "type": "string",
                        "example": "+1234567890"
                    },
                    "token": {
                        "description": "Le token d'accès de l'utilisateur, généré lors de l'authentification",
                        "type": "string",
                        "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9..."
                    },
                    "orders": {
                        "description": "La liste des commandes passées par l'utilisateur",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderResource"
                        }
                    }
                },
                "type": "object"
            },
            "TicketTypeResource": {
                "title": "Ticket Type Resource",
                "description": "Représentation d'un type de ticket.",
                "required": [
                    "name",
                    "slug",
                    "price",
                    "quantity",
                    "description"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "VIP"
                    },
                    "slug": {
                        "type": "string",
                        "example": "vip-ticket"
                    },
                    "price": {
                        "type": "number",
                        "example": 15000
                    },
                    "quantity": {
                        "type": "integer",
                        "example": 100
                    },
                    "description": {
                        "type": "string",
                        "example": "Accès VIP avec des sièges réservés."
                    }
                },
                "type": "object"
            }
        }
    },
    "tags": [
        {
            "name": "Événements",
            "description": "Endpoints relatifs aux événements."
        },
        {
            "name": "Intentions",
            "description": "Intentions"
        },
        {
            "name": "Orders",
            "description": "Orders"
        },
        {
            "name": "User",
            "description": "User"
        },
        {
            "name": "Utilisateur",
            "description": "Utilisateur"
        }
    ]
}